buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://jcenter.bintray.com/" }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}
apply plugin: 'forge'
apply plugin: 'maven'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.0.1"
group = "ru.glitchless.auth" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "glitchlessauth"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    embed
    compile.extendsFrom(embed)
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    replaceIn "GlitchlessAuth.java"
    replace '${version}', project.version
    runDir = "run"
}

dependencies {
    embed "com.squareup.okhttp3:okhttp:3.6.0"
}

// Add dependencies to the JAR

jar {
    manifest {
        attributes([
                "Specification-Title"     : "glitchlessauth",
                "Specification-Vendor"    : "lionzxy",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "lionzxy",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from configurations.embed.collect {
        exclude '.classpath'
        exclude '.project'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'module-info.class'
        exclude 'META-INF/NOTICE'
        it.isDirectory() ? it : zipTree(it)
    }
}

artifacts {
    archives jar
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

